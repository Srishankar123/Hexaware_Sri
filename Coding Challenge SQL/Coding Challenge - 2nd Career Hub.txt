1.  CREATE DATABASE CareerHub;


2.
CREATE TABLE Companies (
    CompanyID INT IDENTITY(1,1) PRIMARY KEY,
    CompanyName VARCHAR(255) NOT NULL,
    Location VARCHAR(255) NOT NULL
);


CREATE TABLE Jobs (
    JobID INT IDENTITY(1,1) PRIMARY KEY,
    CompanyID INT NOT NULL,
    JobTitle VARCHAR(255) NOT NULL,
    JobDescription TEXT NOT NULL,
    JobLocation VARCHAR(255) NOT NULL,
    Salary DECIMAL(10,2) NOT NULL,
    JobType VARCHAR(50) NOT NULL CHECK (JobType IN ('Full-time', 'Part-time', 'Contract', 'Internship')),
    PostedDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (CompanyID) REFERENCES Companies(CompanyID) ON DELETE CASCADE
);


CREATE TABLE Applicants (
    ApplicantID INT IDENTITY(1,1) PRIMARY KEY,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Phone VARCHAR(20) UNIQUE NOT NULL,
    Resume TEXT NOT NULL
);


CREATE TABLE Applications (
    ApplicationID INT IDENTITY(1,1) PRIMARY KEY,
    JobID INT NOT NULL,
    ApplicantID INT NOT NULL,
    ApplicationDate DATETIME DEFAULT GETDATE(),
    CoverLetter TEXT NOT NULL,
    FOREIGN KEY (JobID) REFERENCES Jobs(JobID) ON DELETE CASCADE,
    FOREIGN KEY (ApplicantID) REFERENCES Applicants(ApplicantID) ON DELETE CASCADE
);

3.   
CREATE TABLE Companies (
    CompanyID INT IDENTITY(1,1) PRIMARY KEY, 
    CompanyName VARCHAR(255) NOT NULL UNIQUE, 
    Location VARCHAR(255) NOT NULL
);

CREATE TABLE Jobs (
    JobID INT IDENTITY(1,1) PRIMARY KEY, 
    CompanyID INT NOT NULL, 
    JobTitle VARCHAR(255) NOT NULL,
    JobDescription TEXT NOT NULL,
    JobLocation VARCHAR(255) NOT NULL,
    Salary DECIMAL(10,2) NOT NULL CHECK (Salary > 0), -
    JobType VARCHAR(50) NOT NULL CHECK (JobType IN ('Full-time', 'Part-time', 'Contract', 'Internship')),
    PostedDate DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (CompanyID) REFERENCES Companies(CompanyID) ON DELETE CASCADE 
);

CREATE TABLE Applicants (
    ApplicantID INT IDENTITY(1,1) PRIMARY KEY, 
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL, 
    Phone VARCHAR(20) UNIQUE NOT NULL, 
    Resume TEXT NOT NULL
);

CREATE TABLE Applications (
    ApplicationID INT IDENTITY(1,1) PRIMARY KEY, 
    JobID INT NOT NULL, 
    ApplicantID INT NOT NULL, 
    ApplicationDate DATETIME DEFAULT GETDATE(),
    CoverLetter TEXT NOT NULL CHECK (LEN(CoverLetter) > 20), 
    FOREIGN KEY (JobID) REFERENCES Jobs(JobID) ON DELETE CASCADE, 
    FOREIGN KEY (ApplicantID) REFERENCES Applicants(ApplicantID) ON DELETE CASCADE 
);


4.  IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'CareerHub')
BEGIN
    CREATE DATABASE CareerHub;
    PRINT 'Database CareerHub created successfully.';
END
ELSE
    PRINT 'Database already exists.';



5. select JobID, Count(ApplicationID) Application_Count from Applications
group by JobID;



6. select j.JobID,j.CompanyID, c.CompanyName,j.JobTitle, j.JobDescription, j.JobLocation, j.Salary from Jobs j
join
Companies c on j.CompanyID=c.CompanyID
where j.salary>70000 and j.salary<90000 ;


7.   select  a.ApplicationID, a.JobID,j.JobTitle, a.ApplicantID,c.CompanyName, a.ApplicationDate  from  Applications a
join
Jobs j on a.JobID=j.JobID
join
Companies c on j.CompanyID=c.CompanyID
where a.ApplicantID=2;


8.   select avg(j.Salary) as Avg_Salary from Jobs j   
where j.Salary > 0;


9. SELECT j.CompanyID, c.CompanyName, COUNT(j.JobID) AS JobCount
FROM Jobs j
JOIN Companies c ON j.CompanyID = c.CompanyID
GROUP BY j.CompanyID, c.CompanyName
HAVING COUNT(j.JobID) = (
    SELECT MAX(JobCount)
    FROM (
        SELECT COUNT(JobID) AS JobCount
        FROM Jobs
        GROUP BY CompanyID
    ) AS JobCounts
);


10. SELECT DISTINCT a.ApplicantID, ap.FullName, ap.Experience, c.CompanyName, c.Location
FROM Applications a
JOIN Jobs j ON a.JobID = j.JobID
JOIN Companies c ON j.CompanyID = c.CompanyID
JOIN Applicants ap ON a.ApplicantID = ap.ApplicantID
WHERE c.Location = 'New York'
AND ap.Experience >= 3;


11.SELECT DISTINCT a.JobTitle
FROM Jobs a
WHERE salary>60000 and salary<80000;


12. SELECT  a.JobID
FROM Jobs a
where a.JobID not in(select JobID from Applications);


13. SELECT  a.ApplicantID ,a.JobID,j.JobTitle,c.CompanyName
FROM Applications a
join
Jobs j on a.JobID=j.JobID
join
Companies c on j.CompanyID=c.CompanyID;


14. SELECT  c.CompanyName, Count(j.JobID) as No_of_Job_Postings
FROM Companies c
left join
Jobs j on c.CompanyID=j.CompanyID
group by c.CompanyID,c.CompanyName;


15. SELECT  a.ApplicantID, aa.JobID,j.JobTitle,c.CompanyName
FROM Applicants a
left join 
Applications aa on aa.ApplicantID=a.ApplicantID 
 left join 
Jobs j on aa.JobID=j.JobID
left join
Companies c on j.CompanyID=c.CompanyID;


16.  SELECT  c.CompanyName
from Companies c 
join 
Jobs j on j.CompanyID=c.CompanyID
where j.Salary > (select AVG(Salary) from Jobs)
group by c.CompanyName;


17.  SELECT a.FirstName,a.LastName, Concat(a.City,' ' ,a.State) as Location
from Applicants a ;  


18.  SELECT JobTitle
from Jobs   where JobTitle like '%Engineer%' or JobTitle like '%Developer%';

19.  SELECT  a.ApplicantID,j.JobID, j.JobTitle
from Applicants a 
full outer join Applications aa on a.ApplicantID=aa.ApplicantID 
full outer join
Jobs j on aa.JobID=j.JobID;


20. SELECT a.ApplicantID, a.FirstName, a.LastName, c.CompanyName, c.City
FROM Applicants a
CROSS JOIN Companies c
WHERE a.Experience > 2
AND c.City = 'Chennai';
