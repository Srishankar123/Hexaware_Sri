import pyodbc
from util.db_conn_util import DBConnUtil
from entity.customer import Customer
from exception.user_defined_exception import CustomerNotFoundException

class CustomerDAO:
    def __init__(self):
        self.conn = DBConnUtil.get_connection()

    def create_customer(self, customer):
        cursor = self.conn.cursor()
        query = """INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone, Address)
                   VALUES (?, ?, ?, ?, ?, ?)"""
        cursor.execute(query, customer.customer_id, customer.first_name, customer.last_name,
                       customer.email, customer.phone, customer.address)
        self.conn.commit()
        print("Customer added successfully!")

    def read_customer(self, customer_id):
        cursor = self.conn.cursor()
        query = "SELECT * FROM Customers WHERE CustomerID = ?"
        cursor.execute(query, customer_id)
        row = cursor.fetchone()
        if row:
            return Customer(*row)
        else:
            raise CustomerNotFoundException(f"No customer found with ID {customer_id}")

    def update_customer(self, customer):
        cursor = self.conn.cursor()
        query = """UPDATE Customers
                   SET FirstName = ?, LastName = ?, Email = ?, Phone = ?, Address = ?
                   WHERE CustomerID = ?"""
        cursor.execute(query, customer.first_name, customer.last_name, customer.email,
                       customer.phone, customer.address, customer.customer_id)
        self.conn.commit()
        print("Customer updated successfully!")

    def delete_customer(self, customer_id):
        cursor = self.conn.cursor()
        query = "DELETE FROM Customers WHERE CustomerID = ?"
        cursor.execute(query, customer_id)
        self.conn.commit()
        print("Customer deleted successfully!")






class Customer:
    def __init__(self, customer_id, first_name, last_name, email, phone, address):
        self.customer_id = customer_id
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.phone = phone
        self.address = address




class CustomerNotFoundException(Exception):
    def __init__(self, message):
        super().__init__(message)

# Define similar exceptions for other entities as needed.





from dao.customer_dao import CustomerDAO
from entity.customer import Customer
from exception.user_defined_exception import CustomerNotFoundException


class MainModule:
    def __init__(self):
        self.customer_dao = CustomerDAO()

    def print_menu(self):
        print("\n========== TechShop Menu ==========")
        print("1. Add Customer")
        print("2. View Customer")
        print("3. Update Customer")
        print("4. Delete Customer")
        print("5. Exit")
        return int(input("Enter your choice: "))

    def run(self):
        while True:
            choice = self.print_menu()
            try:
                if choice == 1:
                    customer_id = int(input("Enter Customer ID: "))
                    first_name = input("First Name: ")
                    last_name = input("Last Name: ")
                    email = input("Email: ")
                    phone = input("Phone: ")
                    address = input("Address: ")
                    cust = Customer(customer_id, first_name, last_name, email, phone, address)
                    self.customer_dao.create_customer(cust)
                    print("‚úÖ Customer added successfully!")

                elif choice == 2:
                    customer_id = int(input("Enter Customer ID: "))
                    customer = self.customer_dao.read_customer(customer_id)
                    if not customer:
                        raise CustomerNotFoundException()
                    print("‚úÖ Customer Details:")
                    print(customer.__dict__)

                elif choice == 3:
                    customer_id = int(input("Enter Customer ID: "))
                    first_name = input("First Name: ")
                    last_name = input("Last Name: ")
                    email = input("Email: ")
                    phone = input("Phone: ")
                    address = input("Address: ")
                    cust = Customer(customer_id, first_name, last_name, email, phone, address)
                    self.customer_dao.update_customer(cust)
                    print("‚úÖ Customer updated successfully!")

                elif choice == 4:
                    customer_id = int(input("Enter Customer ID: "))
                    self.customer_dao.delete_customer(customer_id)
                    print("‚úÖ Customer deleted successfully!")

                elif choice == 5:
                    print("üëã Exiting TechShop... Goodbye!")
                    break

                else:
                    print("‚ùå Invalid choice. Please try again.")
            except CustomerNotFoundException as ce:
                print("‚ö†Ô∏è", ce)
            except Exception as e:
                print("‚ùå Error:", e)


if __name__ == '__main__':
    app = MainModule()
    app.run()





import pyodbc

class DBConnUtil:
    @staticmethod
    def get_connection():
        try:
            connection = pyodbc.connect(
                'DRIVER={SQL Server};'
                'SERVER=DESKTOP-HCRUI4E;'
                'DATABASE=techshop;'
                'Trusted_Connection=yes;'
            )
            return connection
        except Exception as e:
            print("Error connecting to database:", e)
            raise

